// Generated by CoffeeScript 1.9.1
var CssOptimizer, Future, JsOptimizer, Optimizer, _, browserInitGenerator, fs, mkdirp, rmrf, sha1;

fs = require('fs');

_ = require('underscore');

mkdirp = require('mkdirp');

Future = require('../utils/Future');

rmrf = require('../utils/rmrf');

sha1 = require('../utils/sha1');

browserInitGenerator = require('./browserInitGenerator');

CssOptimizer = require('./CssOptimizer');

JsOptimizer = require('./JsOptimizer');

Optimizer = (function() {

  /*
  Build optimizer.
  * grouping modules into single files
  * minifying, gzipping
  * and so on
   */
  Optimizer.prototype._zDir = null;

  Optimizer.prototype._requireConfig = null;

  Optimizer.prototype._cleanFuture = null;

  function Optimizer(params) {
    this.params = params;
    this._zDir = this.params.targetDir + "/public/assets/z";
  }

  Optimizer.prototype.run = function() {
    var cssOptimizerPromise, jsOptimizerPromise, start, zDirFuture;
    start = process.hrtime();
    zDirFuture = (this.params.clean ? rmrf(this._zDir) : Future.resolved()).flatMap((function(_this) {
      return function() {
        return Future.call(mkdirp, _this._zDir);
      };
    })(this));
    cssOptimizerPromise = this.params.css ? (new CssOptimizer(this.params, zDirFuture)).run() : Future.call(fs.unlink, this.params.targetDir + "/conf/css-to-group-generated.js").then(function() {
      return {};
    })["catch"](function() {
      return {};
    });
    jsOptimizerPromise = this.params.js ? (new JsOptimizer(this.params, zDirFuture)).run() : Future.resolved({});
    return jsOptimizerPromise.zip(cssOptimizerPromise).flatMap((function(_this) {
      return function(jsGroupMap, cssGroupMap) {
        console.log("Generating browser-init script...");
        return browserInitGenerator.generate(_this.params, jsGroupMap, cssGroupMap);
      };
    })(this)).flatMap((function(_this) {
      return function(browserInitScriptString) {
        var fileName;
        fileName = sha1(browserInitScriptString);
        return Future.call(fs.writeFile, _this._zDir + "/" + fileName + ".js", browserInitScriptString).zip(Future.call(fs.writeFile, _this._zDir + "/browser-init.id", fileName));
      };
    })(this)).failAloud().done(function() {
      var diff;
      diff = process.hrtime(start);
      return console.log("Optimization complete in " + ((diff[0] * 1e9 + diff[1]) / 1e6) + " ms");
    });
  };

  return Optimizer;

})();

module.exports = Optimizer;
