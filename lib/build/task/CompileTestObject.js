// Generated by CoffeeScript 1.9.1
(function() {
  var CompileCoffeeScript, CompileTestObject, path,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  CompileCoffeeScript = require('./CompileCoffeeScript');

  path = require('path');

  CompileTestObject = (function(superClass) {
    extend(CompileTestObject, superClass);

    function CompileTestObject() {
      return CompileTestObject.__super__.constructor.apply(this, arguments);
    }

    CompileTestObject.prototype.preCompilerCallback = function(coffeeString) {
      return "context = stof.getCurrentContext()\nstof.defineContext(__filename, false)\n\n" + coffeeString + "\n\nmodule.exports = " + (path.basename(this.params.file, '.coffee')) + "\n\nstof.defineContext(context, false)";
    };

    return CompileTestObject;

  })(CompileCoffeeScript);

  module.exports = CompileTestObject;

}).call(this);
